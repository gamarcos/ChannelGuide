// Generated by view binder compiler. Do not edit!
package com.gabrielmarcos.features.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.gabrielmarcos.features.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCatalogBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final AppCompatImageView catalogChannelImage;

  @NonNull
  public final TextView catalogChannelName;

  @NonNull
  public final ConstraintLayout catalogContent;

  @NonNull
  public final TextView catalogCurrentProgram;

  @NonNull
  public final TextView catalogNextProgram;

  private ItemCatalogBinding(@NonNull CardView rootView,
      @NonNull AppCompatImageView catalogChannelImage, @NonNull TextView catalogChannelName,
      @NonNull ConstraintLayout catalogContent, @NonNull TextView catalogCurrentProgram,
      @NonNull TextView catalogNextProgram) {
    this.rootView = rootView;
    this.catalogChannelImage = catalogChannelImage;
    this.catalogChannelName = catalogChannelName;
    this.catalogContent = catalogContent;
    this.catalogCurrentProgram = catalogCurrentProgram;
    this.catalogNextProgram = catalogNextProgram;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCatalogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCatalogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_catalog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCatalogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.catalog_channel_image;
      AppCompatImageView catalogChannelImage = ViewBindings.findChildViewById(rootView, id);
      if (catalogChannelImage == null) {
        break missingId;
      }

      id = R.id.catalog_channel_name;
      TextView catalogChannelName = ViewBindings.findChildViewById(rootView, id);
      if (catalogChannelName == null) {
        break missingId;
      }

      id = R.id.catalog_content;
      ConstraintLayout catalogContent = ViewBindings.findChildViewById(rootView, id);
      if (catalogContent == null) {
        break missingId;
      }

      id = R.id.catalog_current_program;
      TextView catalogCurrentProgram = ViewBindings.findChildViewById(rootView, id);
      if (catalogCurrentProgram == null) {
        break missingId;
      }

      id = R.id.catalog_next_program;
      TextView catalogNextProgram = ViewBindings.findChildViewById(rootView, id);
      if (catalogNextProgram == null) {
        break missingId;
      }

      return new ItemCatalogBinding((CardView) rootView, catalogChannelImage, catalogChannelName,
          catalogContent, catalogCurrentProgram, catalogNextProgram);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
